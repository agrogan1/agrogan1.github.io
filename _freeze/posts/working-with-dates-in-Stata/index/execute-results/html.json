{
  "hash": "1b05b978c12242adb588379d2e8f42df",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Working With Dates in Stata\"\nauthor: \"Andrew Grogan-Kaylor\"\ndate: \"2023-10-20\"\ncategories: [stats]\nimage: \"data.png\"\n---\n\n\n# Introduction\n\n\n::: {.cell}\n\n:::\n\n\nDates in any statistical software (Stata, R) are complicated. \n\nFor example, a particular date could be coded as \"4-5-2021\", or \"5-4-2021\" or \"April 5, 2021\" or \"5APR2021\". \n\nIn addition to the multiplicity of possible formats it is also difficult to do calculations on these kinds of quantities e.g. \"How many days have elapsed from Day A to Day B?\" \n\nTo address these issues, Stata wants these dates to be encoded as a *number*, specifically the number of days since January 1, 1960. We then make sure to format these numbers as dates.\n\n# Get The Data\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nuse simulated-date.dta, clear\n\n```\n:::\n\n\n# List And Describe The Data\n\nWe see that both date variables are formatted as strings\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n\nlist\n\ndescribe\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     |  startdate     enddate |\n     |------------------------|\n  1. | 2019-01-01   2019-1-30 |\n  2. | 2019-02-15   2019-5-30 |\n  3. | 2019-03-01   2019-4-30 |\n     +------------------------+\n\n\nContains data from simulated-date.dta\n Observations:             3                  \n    Variables:             2                  6 Apr 2021 16:46\n---------------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n---------------------------------------------------------------------------------------\nstartdate       str10   %10s                  startdate\nenddate         str9    %9s                   enddate\n---------------------------------------------------------------------------------------\nSorted by: \n```\n\n\n:::\n:::\n\n\n# Create Date Variables\n\n> There are *many* date functions in Stata, to work with different kinds of data in different formats. `help date` should direct you to the documentation for *Date and time functions*.\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\ngenerate startdate2 = date(startdate, \"YMD\") // create a date, specifying order of elements\n\ngenerate enddate2 = date(enddate, \"YMD\") // create a date, specifying order of elements\n\n```\n:::\n\n\n> The command has created 2 dates in numeric form, but they display as numbers.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n\ndescribe\n\nlist\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\nContains data from simulated-date.dta\n Observations:             3                  \n    Variables:             4                  6 Apr 2021 16:46\n---------------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n---------------------------------------------------------------------------------------\nstartdate       str10   %10s                  startdate\nenddate         str9    %9s                   enddate\nstartdate2      float   %9.0g                 \nenddate2        float   %9.0g                 \n---------------------------------------------------------------------------------------\nSorted by: \n     Note: Dataset has changed since last saved.\n\n     +----------------------------------------------+\n     |  startdate     enddate   startd~2   enddate2 |\n     |----------------------------------------------|\n  1. | 2019-01-01   2019-1-30      21550      21579 |\n  2. | 2019-02-15   2019-5-30      21595      21699 |\n  3. | 2019-03-01   2019-4-30      21609      21669 |\n     +----------------------------------------------+\n```\n\n\n:::\n:::\n\n\n# Format As Dates\n\nWe format these *numeric* variables as *dates*. While the variables remain as the number of days since January 1, 1960, since they are formatted as dates, they now appear as human readable dates.\n\n\n::: {.cell collectcode='true'}\n\n```{.stata .cell-code}\n\nformat %d startdate2 enddate2\n\t\ndescribe\n\nlist\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\nContains data from simulated-date.dta\n Observations:             3                  \n    Variables:             4                  6 Apr 2021 16:46\n---------------------------------------------------------------------------------------\nVariable      Storage   Display    Value\n    name         type    format    label      Variable label\n---------------------------------------------------------------------------------------\nstartdate       str10   %10s                  startdate\nenddate         str9    %9s                   enddate\nstartdate2      float   %d                    \nenddate2        float   %d                    \n---------------------------------------------------------------------------------------\nSorted by: \n     Note: Dataset has changed since last saved.\n\n     +------------------------------------------------+\n     |  startdate     enddate   startda~2    enddate2 |\n     |------------------------------------------------|\n  1. | 2019-01-01   2019-1-30   01jan2019   30jan2019 |\n  2. | 2019-02-15   2019-5-30   15feb2019   30may2019 |\n  3. | 2019-03-01   2019-4-30   01mar2019   30apr2019 |\n     +------------------------------------------------+\n```\n\n\n:::\n:::\n\n\n# Calculations\n\nWe can now use dates in calculations. For example, \"How much time has elapsed between `startdate2` and `enddate2`?\"\t\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n\ngenerate elapseddays = enddate2 - startdate2\n\t\ngenerate elapsedyears = (enddate2 - startdate2)/365\n\t\nlist, abbreviate(15) // list out the data with new variables\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     |  startdate     enddate   startdate2    enddate2   elapseddays   elapsedyears |\n     |------------------------------------------------------------------------------|\n  1. | 2019-01-01   2019-1-30    01jan2019   30jan2019            29       .0794521 |\n  2. | 2019-02-15   2019-5-30    15feb2019   30may2019           104       .2849315 |\n  3. | 2019-03-01   2019-4-30    01mar2019   30apr2019            60       .1643836 |\n     +------------------------------------------------------------------------------+\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}