{
  "hash": "339deff881cea1ba6ed9af2f3a0830bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Why Stata Is Better (At Graphing) Than R\"\nauthor: \"Andy Grogan-Kaylor\"\ndate: 2024-2-7\ncategories: [stats, dataviz]\nimage: \"mybarStata.png\"\nexecute: \n  echo: true\ncode-fold: true\n---\n\n\n# Introduction\n\nBoth R and Stata are programs with strong data visualization and analysis capabilities. However, Stata's capabilities as a data visualization program are sometimes under-rated. The intent of the post is to show that Stata can often perform the same graphing task as R, with much simpler, and much more intuitive, command syntax.\n\nThis post uses simulated social service agency data clients. In each program, I am going to graph mental health of clients (at Time 2) by program.\n\n\n::: {.cell}\n\n:::\n\n\n# Stata\n\n\n::: {.cell}\n\n```{.stata .cell-code}\n\nimport delimited \"clients.csv\", encoding(ISO-8859-2) clear // import data\n\t\ngraph bar mental_health_t2, /// bar graph of mean outcome\nover(program, gap(10)) /// over program\nscheme(michigan) /// michigan graph scheme\nasyvars // bars that have color\n\nquietly graph export mybarStata.png, width(2000) replace\n\n```\n\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(8 vars, 491 obs)\n```\n\n\n:::\n:::\n\n\n\n![Bar Graph in Stata](mybarStata.png)\n\n# R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr) # library to import data\n\t\nclients <- read_csv(\"clients.csv\") # import data\n\t\nlibrary(ggplot2)\n\t\nlibrary(michigancolors)\n\nggplot(clients, # the data that I am using\n       aes(x = program, # 'aesthetic' includes x\n           y = mental_health_T2, # and y\n           fill = program)) + # and fill by program\n  stat_summary(fun = mean, # summarizing y \n               geom = \"bar\") + # with bars\n  scale_fill_manual(values = michigancolors()) + # UM colors\n  theme_minimal() # minimal theme\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}