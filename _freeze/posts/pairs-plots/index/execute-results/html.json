{
  "hash": "dbe9bacf8f9f090ba0c25e6a40acade0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pairs Plots\"\nauthor: \"Andy Grogan-Kaylor\" \ndate: \"2025-8-23\"\ncategories: [stats, dataviz]\n---\n\n\n\nFor a few recent projects, I have had to quickly get up to speed on new data. If I'm focusing on a relatively small number of variables--perhaps a subset of a much larger dataset--I have found the *pairs plot* an incredibly useful tool for learning about new data, and getting a visual sense of the distributions of the variables and their relationships. After experimenting with a few different libraries, I have come to really like `pairs.panels` in the `psych` [@psych] library. I provide an example of `pairs.panels` below, but I also sometime use what seems to me to be the quite similar in spirit `corrgram` [@corrgram] library.\n\nFor this example, I use the data from my [Multilevel Workshop](https://agrogan1.github.io/multilevel-workshop/) site.\n\n# Call Relevant Libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(haven) # read Stata data\n\nlibrary(psych) # useful routines for psych data\n```\n:::\n\n\n\n# Get The Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmydata <- read_dta(\"simulated_multilevel_data.dta\")\n```\n:::\n\n\n\n# Variable Labels\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlabelled::look_for(mydata) # look at variables and variable labels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n pos variable            label                          col_type missing values\n 1   country             country id                     dbl      0             \n 2   HDI                 Human Development Index        dbl      0             \n 3   family              family id                      dbl      0             \n 4   id                  unique country family id       chr      0             \n 5   identity            hypothetical identity group v~ dbl      0             \n 6   intervention        recieved intervention          dbl      0             \n 7   physical_punishment physical punishment in past w~ dbl      0             \n 8   warmth              parental warmth in past week   dbl      0             \n 9   outcome             beneficial outcome             dbl      0             \n```\n\n\n:::\n:::\n\n\n\n# Pairs Plot\n\nHere I set `show.points` to `FALSE` for two reasons: by design, most of the variables in my simulated data are uncorrelated, showing the points seemed to somehow create more confusion than clarity; there are *a lot* of data points, and for that reason as well, showing the points seemed to create more confusion than clarity. You of course can experiment with setting `show.points` to `TRUE`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npairs.panels(mydata,\n             show.points = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}