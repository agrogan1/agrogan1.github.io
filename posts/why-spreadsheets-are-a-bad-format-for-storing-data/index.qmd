---
title: "Why Spreadsheets Are A Bad Format For Storing Data"
author: "Andy Grogan-Kaylor"
date: "2025-9-23"
categories: [stats, workflow]
---

# Background

Excel and Google Sheets are sometimes used as programs to collect and store data. Excel and Google Sheets are often used because they are the only programs that some individuals or agencies have for storing data. Additionally, many programs like Qualtrics or RedCap may use Excel as a default output format. 

Excel and other spreadsheet programs may also be used because spreadsheets can be very intuitive and easy ways of managing small amounts of data. 

However, Excel and Google Sheets may be problematic as a data storage solution for a number of reasons detailed below, especially as data sets grow in size. Notably, statistical programs like [Stata](https://www.stata.com/), [SAS](https://www.sas.com/en_us/home.html), or SPSS all store additional information with each variable such as: a *variable label*, describing the contents of the variable, or the survey question that resulted in the variable; and a *value label*, which attaches qualitative information to each possible value of the response.[^CSV]

[^CSV]: Over time, I've realized that the issues discussed in this post also apply to the use of CSV (comma separated value) files. While CSV files are convenient, and can be imported by almost any software, they may lead to many of the same issues discussed in this post.

Excel and Google Sheets do not generally contain this extra information about each variable, or column of data, which may lead to extra work, extra effort, or even errors in working with quantitative information.

The data below are stored in Stata format, but could as easily be stored in SAS or SPSS format.

```{r}
#| echo: false
#| message: false

library(Statamarkdown)

```


```{stata}

* setup

clear all
	
set seed 3846 // random seed for data

* simulate data so that we have some data to work with

quietly set obs 100 // 100 observations
	
generate id = _n // id variable
	
label variable id "id"

generate Q1 = runiformint(1,4) // randomly simulated Question 1

label variable Q1 "How often do you feel happy?" // add variable label

label define Likert1 1 "Never" 2 "Rarely" 3 "Sometimes" 4 "Often" // define value label
	
label values Q1 Likert1 // add value label to Q1
	
quietly save "simulated-happiness-data.dta", replace

```

# Get And Describe The Data

![Screenshot of Data in Stata](screenshot-Stata.png){ width=75% } 

```{stata, collectcode=TRUE, echo=TRUE}

use "simulated-happiness-data.dta", clear

describe

```

# Descriptive Statistics and Bar Graph

::: {.callout-tip}
## The Descriptive Statistics And Graph Are Informative

Notice how the descriptive statistics and graph are *informative* in that they contain information on the *variable label* and *value label*. These help us to get an intuitive sense of the information in the data. We see this information when we list out the data as well.
:::

## Descriptive Statistics

```{stata, echo=TRUE}

use "simulated-happiness-data.dta", clear

tabulate Q1

```

## Bar Graph

```{stata, echo=TRUE, output=FALSE}

use "simulated-happiness-data.dta", clear

graph bar, over(Q1) title("How often do you feel happy?") asyvars
	
graph export mybar1.png, width(1500) replace

```

![Bar Graph](mybar1.png){width=50%}

## List Out A Sample Of The Data

```{stata, echo=TRUE}

use "simulated-happiness-data.dta", clear

list in 1/10

```

# Now Use The Data In Excel Format

::: {.callout-tip}
## Spreadsheets Are All Similar

The example below focuses on Excel, but could as easily apply to a program like Google Sheets.
:::

```{stata, echo=FALSE}

use "simulated-happiness-data.dta", clear

quietly export excel using "simulated-happiness-data.xls", ///
firstrow(variables) nolabel replace

```

I've saved this simulated data in Excel format.

![Screenshot of Data in Excel Format](screenshot-Excel.png){ width=75% } 

I now import the Excel data file. I use the first row of data as variable names.

```{stata, collectcode=TRUE, output=FALSE}

import excel "simulated-happiness-data.xls", sheet("Sheet1") firstrow clear

save "simulated-happiness-data-EXCEL.dta", replace

```

::: {.callout-tip}
## Spreadsheet Data Are Less Informative

We see right away--when we list some of the data--that the data are less informative. 
:::

```{stata, echo=TRUE}

use "simulated-happiness-data-EXCEL.dta", clear

list in 1/10

```

::: {.callout-tip}
## Statistical Formats Save Work and Reduce Error Rates

Adding this valuable information back into the data set may take a great deal of extra effort, and may also lead to errors.
:::

# Descriptive Statistics and Bar Graph

Notice how the descriptive statistics and graph are much less informative. For example, it is now not immediately clear what `Q1` represents. 

It is also not clear whether higher values of `Q1` represent higher levels of *happiness*, or higher levels of *unhappiness*, a crucially important substantive distinction. The information on variable label and value label will have to be added back into the data when preparing a report for dissemination. 

If there are several, or many, variables in the data set, this step of adding information back into the data will have to be done multiple times, increasing the time for data processing, as well as introducing a possibility for error.

## Descriptive Statistics

```{stata, echo=TRUE}

use "simulated-happiness-data-EXCEL.dta", clear

tabulate Q1

```

### Bar Graph

```{stata, echo=TRUE, output=FALSE}

use "simulated-happiness-data-EXCEL.dta", clear

graph bar, over(Q1) title("How often do you feel happy?") asyvars
	
graph export mybar2.png, width(1500) replace

```

![Bar Graph](mybar2.png){width=50%}

# A Few Final Issues

Notice how Excel doesn't enforce the idea of whether variables are *numeric*, or *string*, and so would allow storage of different types of information in the same column. Relatedly, *numeric* variables may be improperly stored as *strings*, often necessitating recoding before graphical or statistical procedures can be employed.

Excel also doesn't enforce the idea that data in the same row belong to the same individual, making it easily to accidentally move, or write over, data.

Lastly, Excel would allow some of your columns to have the same name, which might make data difficult to work with in other software.

| x           | y           | verylongvariablename | verylongvariablename | verylongvariablename |
| ----------- | ----------- |--------------------- | -------------------- | -------------------- |
| 100         | 1           | Smith                | 20                   | 30                   |
| 200         | 2           | 30                   | NA                   | 40                   |
| not applicable   | x      | yes                  | 60                   | 50                   |














