---
title: "Interactions Are Symmetric"
author: "Andy Grogan-Kaylor" 
date: "2025-7-22"
categories: [stats, teaching, interactions]
image: mountains-and-lake.png
---

```{r}

library(plotly)

library(ggplot2)

library(crosstalk)

# library(d3scatter)

# library(car)

```

# Idea

Interactions are often presented as though one variable were the *main independent variable* *x*, while a second variable is the *moderator variable* *m*.

$$y = \beta_0 + \beta_1 x + \beta_2 m + \beta_3 xm + e_i$$ {#eq-moderation}

In truth, however, because of the commutative property of multiplication, $a \times b = b \times a$, each variable can be thought of as moderating the other: $x \times m = m \times x$.

In terms of visualizing interactions, it is perhaps more *conventional* to have the variable that is conceptualized as the *independent variable*, *x*, along the *x* axis, and to show separate regression lines for each value of the *moderator* *m* [^dataviz1]. However, despite being more conventional, it is mathematically plausible to present the inverse: *m* along the *x* axis, and different regression lines for different values of *x* [^dataviz2].

[^dataviz1]: In the language of data visualization, I'd think of this as a classic problem of visualizing 3 dimensions of data on a 2 dimensional surface. In this approach, we are  visualizing *y* by using the *y* axis, *x* by using the *x* axis, and *m* with *color* or *linetype* or both.

[^dataviz2]: Again, in the language of data visualization, I'd think of this as a classic problem of visualizing 3 dimensions of data on a 2 dimensional surface. In this approach, we are  visualizing *y* by using the *y* axis, *m* by using the *x* axis, and *x* with *color* or *linetype* or both.

# Explore

Explore these ideas using the visualization below. Start by clicking on values in the table to see how they are displayed in each of the two visualization possibilities. You may also click on the graphs themselves.

```{r}

x <- rep(seq(1:5), 2) # sequence from 1 to 5

m <- rep(seq(from = 0, to = 1), each = 5) # binomial moderator

# e <- rnorm(N, 0, 10)

y <- x + m + .5 * x * m 

# m <- factor(m)

# scatter3d(x = x, y = m, z = y)

mydata <- data.frame(x, m , y)

shared_mydata <- SharedData$new(mydata)

```

```{r}

p1 <- plot_ly(data = shared_mydata, 
              x = ~x, 
              y = ~y,
              color = ~factor(m),
              linetype = ~factor(m), 
              colors = "Set1",
              text = ~paste("x:", x, 
                            '<br>m:', m,
                            '<br>y:', y),
              hoverinfo = 'text', 
              type = 'scatter',
              mode = 'lines+markers',
              marker = list(size = 15)) %>% 
  layout(legend=list(title=list(text='m')))

# p1

```

```{r}

p2 <- plot_ly(data = shared_mydata, 
              x = ~m, 
              y = ~y,
              color = ~factor(x), 
              linetype = ~factor(x), 
              colors = "Set1",
              text = ~paste("x:", x, 
                            '<br>m:', m,
                            '<br>y:', y),
              hoverinfo = 'text',
              type = 'scatter',
              mode = 'lines+markers',
              marker = list(size = 15)) %>% 
  layout(legend=list(title=list(text='x')))

# p2

```

```{r}

mytable <- DT::datatable(shared_mydata, 
                         options = list(dom = 't'))

```

```{r}
#| column: page

# mytable

bscols(widths = c(2, NA, NA), 
       mytable, 
       p1,
       p2)

```

